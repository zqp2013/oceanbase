[public]
pid_file = ./log/updateserver.pid    # pid file
log_file = ./log/updateserver.log    #调试日志文件名
log_level = debug                #调试日志级别

[update_server]                  # UpdateServer公共配置
dev_name = bond0               #设备名
port = 8888                     #update server监听端口
role = standalone                #update server类型，包括：master, slave, standalone，其中standalone用于测试，它从本地装载schema信息
app_name = collect              #应用名
log_dir_path = ./log              #操作日志目录
log_size_mb = 64                #操作日志切分大小
network_timeout_ms = 1000      #网络超时时间，默认为1000ms，即1s

# [master], [slave]和[standalone]是UpdateServer分别做为master, slave和用于调试的配置，#只需要配置其中之一
[master]                       # UpdateServer Master特有配置
read_thread_count = 10          #读线程个数
read_task_queue_size = 1000      #读任务队列大小
write_task_queue_size = 1000      #写任务队列大小，写线程个数永远为1
write_thread_batch_num = 1024    #批量写数量
root_ip_addr = 127.0.0.1           #Root Server的IP
root_port = 1010                 #Root Server的端口
fetch_schema_times = 10          #Master向Root Server获取schema的重试次数
fetch_schema_timeout_ms = 2000   #Master每次获取schema的超时时间

[slave]                          #UpdateServer Slave特有配置
log_task_queue_size = 1000         #同步日志队列大小
master_ip_addr = 127.0.0.1         #UpdateServer Master的IP
master_port = 1030               # UpdateServer Master的端口
register_times = 10               # Slave向Master注册的重试次数
register_timeout_ms = 2000        # Slave向Master每次注册的超时时间

[standalone]                    # 调试模式特有配置
read_thread_count = 1           # 读线程个数，默认为1
read_task_queue_size = 1000      #读任务队列大小
write_task_queue_size = 1000     #写任务队列大小
write_thread_batch_num = 10     #批量写数量
test_schema = ./test_schema.ini    # Table schema文件名，调试模式下从本地装载schema
test_schema_version = 1           # Table schema的版本，调试模式需要手工配置
