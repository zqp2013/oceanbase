[root_server]
vip = 10.1.1.1     // RootServer的vip address
port=3100			// RootServer的监听端口


[chunk_server]
dev_name = bond0      // ChunkServer监听的网络接口
port = 2900			 // ChunkServer的监听端口		

task_queue_size = 1000  // 任务处理队列的长度，待处理的任务积压超过这个数量，新接受到的任务将被返回系统繁忙的应答。
task_thread_count = 10   // 系统任务处理线程个数，配置与机器的CPU个数相关。
max_migrate_task_count = 1 //最多用于迁移的线程个数

datadir_path = /data		// sstable文件所在的磁盘路径（对于多磁盘的机器，都mount到一个路径下的不同磁盘目录下）
application_name = collect   	// 应用名称，比如collect为收藏夹
network_timeout	= 1000000    // 一般网络超时时间，单位微秒
lease_check_interval = 5000000   // 定时检查租约的间隔，单位微秒
retry_times = 3                // 某些操作失败后需要重试，最大重试次数
max_sstable_size = 256 * 1024 * 1024 //sstable文件的最大尺寸
max_sstable_remain_days = 3       // chunkserver上最多保存的老的sstable file的天数，超过这个天数的未被引用的文件，将被回收。
migrate_band_limit_kbytes = 200		   // 复制sstable时同步时的网络带宽限制，单位是KB per second
merge_mem_limit = 67108864    // 每日合并的时候每次最大处理多少数据，默认64M
merge_thread_per_disk = 1      // 每日合并的线程数，以磁盘为单位，1表示为每个磁盘启动一个线程来做每日合并，默认为1
reserve_sstable_copy = 3		// 要保留的sstable的版本数，默认为3
min_drop_cache_wait_second = 120 // tablets切换到新版本以后，等待一段时间后将老的cache清理掉，这个等待是为了避免还有线程在使用老的cache;
min_merge_interval_second = 600 // 两个合并开始的最小间隔,单位秒。

[memory_cache]
dicache_max_num = 32 * 1024	//  block数据索引的个数，计算方法：cache内存总量/每个block的压缩后的平均大小。现假设block压缩后的平均大小为32k，cache总量为1G
dicache_min_timeo = 1 * 1000 * 1000	// block数据索引的过期时间，单位微秒，默认1秒
mbcache_max_num = 1024 	// 内存块的个数，每个内存块默认1M，总内存为1G
mbcache_min_timeo = 1 * 1000 * 1000	// 内存块过期时间，单位微秒，默认1秒

block_cache_memblock_size = 1024 * 1024 	// block cache分配并管理的内存块大小为1M
block_cache_memalign_size = 512		// 使用512字节对齐的方式，direct IO方式读取数据

block_index_cache_memsize = 512 * 1024 * 1024 	// block index cache的大小，默认512M
block_index_cache_max_no_active_usec = 0 	// 默认按照lru进行淘汰，单位微秒
#//  >0 单个item最大允许不被访问的时间，超过该时// 间 item会被淘汰；在该时间范围内item不会被淘// 汰，此时cache_mem_size无含义，但是可以提示内// 存的使用
#//  =0 按照lru淘汰
#//  <0 不被淘汰，此时cache_mem_size无含义，但是// 可以提示内存的使用
block_index_cache_hash_slot_num = 4 * 1024	// 每个chunkserver上大约有4000个sstable文件，每个文件都有一个block index
join_cache_memsize = 512 * 1024 * 1024 //chunkserver 合并时的join cache选项
join_cache_max_no_active_usec = 0     //取值类似于上述的block index cache
join_cache_hash_slot_num = 4 * 1024

file_info_cache_max_cache_num = 1024	// 打开并缓存的文件句柄个数
file_info_cache_min_gc_timeo = 0		// 文件句柄的过期时间，单位微秒
